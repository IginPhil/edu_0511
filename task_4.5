
/*
Создать абстрактный класс Animal с характеристиками животного.
Создать класс Horse который наследуется от Animal, в классе Horse реализовать метод public void run(){ System.out.println("Игого, я поскакал(а)"); }
Создать класс Pegasus который наследуется от Horse, в классе Pegasus реализовать метод public void fly(){ System.out.println("Игого, я полетел(а)"); }
Создать объект лошади и вызвать метод run();
Создать объект пегаса и вызвать метод fly();
*/

public class Main {
    public static void main(String[] args) {
        Horse horse = new Horse();
        Pegasus pegasus = new Pegasus();
        horse.run();
        pegasus.fly();

        System.out.println();

        horse.eat();
        pegasus.eat();
    }
}
public abstract class Animal {
    String name;
    String color;
    int paws;
    int wings;
    boolean fly;

    public Animal(String name, String color, int paws, int wings, boolean fly) {
        this.name = name;
        this.color = color;
        this.paws = paws;
        this.wings = wings;
        this.fly = fly;
    }

    public Animal() {

    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getColor() {
        return color;
    }

    public void setColor(String color) {
        this.color = color;
    }

    public int getPaws() {
        return paws;
    }

    public void setPaws(int paws) {
        this.paws = paws;
    }

    public int getWings() {
        return wings;
    }

    public void setWings(int wings) {
        this.wings = wings;
    }

    public boolean isFly() {
        return fly;
    }

    public void setFly(boolean fly) {
        this.fly = fly;
    }

    void eat() {
        System.out.println("Я кушаю ");
    }
}
public class Horse extends Animal {
    public Horse(String name, String color, int paws, int wings, boolean fly) {
        super(name, color, paws, wings, fly);
    }

    public Horse() {
        super();
    }

    public void run() {
        System.out.println("Игого, я поскакал(а)");
    }
@Override
    void eat() {
        System.out.println("Я кушаю Овес ");
    }
}
public class Pegasus extends Horse {
    public Pegasus(String name, String color, int paws, int wings, boolean fly) {
        super(name, color, paws, wings, fly);
    }

    public Pegasus() {
        super();
    }

    public void fly() {
        System.out.println("Игого, я полетел(а)");
    }
@Override
    void eat() {
        System.out.println("Я кушаю Красные кристалы");
    }
}
© 2021 GitHub, Inc.
